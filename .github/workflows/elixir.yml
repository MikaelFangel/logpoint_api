# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.15.2' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Run tests
      run: mix test

  documentation:
    name: Update documentation
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: ${{ github.head_ref }}
      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
        with:
          elixir-version: '1.15.2' # [Required] Define the Elixir version
          otp-version: '26.0'      # [Required] Define the Erlang/OTP version

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get
      
      - name: Generate Documentation
        run: mix docs
      
      - name: Update documentation
        run: mv ./doc/*.html ./docs/
      
      - name: Check for changes to docs
        id: git_changes
        run: >-
          echo "::set-output name=TREE_STATUS::$(
            git status --porcelain
          )"
      
      - name: Commit changes to documentation
        if: steps.git_changes.outputs.TREE_STATUS != ""
        env:
          ATTR_NAME: 'Philip Cramer'
          ATTR_EMAIL: 'philip-cramer@users.noreply.github.com'
        run: |
          git config --global user.name $ATTR_NAME
          git config --global user.email $ATTR_EMAIL
          git add docs/*.html
          git commit -am "Automatic docs generation"
          git push
